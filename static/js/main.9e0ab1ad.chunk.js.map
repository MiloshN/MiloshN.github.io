{"version":3,"sources":["mapStyles.js","components/Spinner.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["featureType","elementType","stylers","color","visibility","hue","invert_lightness","lightness","gamma","saturation","weight","Spinner","status","className","dangerouslySetInnerHTML","__html","style","textAlign","width","Form","props","useState","address","setAddress","value","finalVal","ulng","ulat","lat","lng","alng","alat","Geocode","setApiKey","pictures","setPictures","fromLatLng","then","response","results","formatted_address","error","console","autocomplete","method","enctype","action","buttonText","chooseImg","onChange","picture","imgExtension","label","galLab","withPreview","withLabel","withIcon","name","placeholder","desc","type","submit","MapWrapped","withScriptjs","withGoogleMap","showForm","setShowForm","locSpinner","setLocSpinner","caseList","setCaseList","singleCase","setSingleCase","payload","loaded","setLoaded","popup","setShowPopup","spinner","setSpinner","reportCase","setReportCase","galleryLogic","setGalleryLogic","lngData","setLngData","token","setToken","userChoose","setUserChoose","userChooseMap","setUserCooseMap","startLocation","currentLoc","setCurrentLoc","useEffect","readCookie","nameEQ","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","axios","get","res","data","cookieName","currentLang","repofuser","descr","readMore","modalH1","modalP","btnAutoLoc","btnMap","repCase","success","defaultZoom","defaultCenter","defaultOptions","styles","mapStyles","onClick","e","latLng","toJSON","isOpen","content","top","left","right","bottom","height","margin","transform","acf","gallery","map","img","backgroundImage","image","backgroundPosition","backgroundRepeat","backgroundSize","overflow","marginTop","title","rendered","description","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","first","parseFloat","sec","key","id","icon","url","scaledSize","window","google","maps","Size","disabled","App","googleMapURL","loadingElement","containerElement","mapElement","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9e0ab1ad.chunk.js","sourcesContent":["export default [\r\n  {\r\n    featureType: \"administrative\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#2f2f2f\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#88db65\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#ddffcf\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"labels.icon\",\r\n    stylers: [\r\n      {\r\n        visibility: \"simplified\",\r\n      },\r\n      {\r\n        hue: \"#87ff00\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"simplified\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"labels.icon\",\r\n    stylers: [\r\n      {\r\n        invert_lightness: true,\r\n      },\r\n      {\r\n        lightness: \"24\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.arterial\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#599b3d\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.arterial\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.arterial\",\r\n    elementType: \"labels.icon\",\r\n    stylers: [\r\n      {\r\n        visibility: \"on\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.local\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#d3ffc2\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.local\",\r\n    elementType: \"labels\",\r\n    stylers: [\r\n      {\r\n        lightness: \"0\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.local\",\r\n    elementType: \"labels.text\",\r\n    stylers: [\r\n      {\r\n        lightness: \"100\",\r\n      },\r\n      {\r\n        gamma: \"1.00\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.local\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.local\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        lightness: \"100\",\r\n      },\r\n      {\r\n        color: \"#88db65\",\r\n      },\r\n      {\r\n        saturation: \"0\",\r\n      },\r\n      {\r\n        weight: \"4.10\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"transit\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#6ec14b\",\r\n      },\r\n      {\r\n        visibility: \"on\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport \"./spinner.css\";\r\n\r\nconst Spinner = ({ status }) => {\r\n  return (\r\n    <div className=\"spinner color-change-2x\">\r\n      <span\r\n        dangerouslySetInnerHTML={{\r\n          __html: `<svg class=\"rotate-scale-up\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"100.069\" height=\"90.806\" viewBox=\"0 0 1966 1784\">\r\n                    <image x=\"4\" y=\"4\" width=\"1958\" height=\"1778\" xlink:href=\"data:img/png;base64,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\"/>\r\n                    </svg>\r\n                    `,\r\n        }}\r\n      />\r\n      {status ? (\r\n        <h1 style={{ color: \"white\", textAlign: \"center\", width: \"100%\" }}>\r\n          Tražimo lokaciju. Sačekajte!\r\n        </h1>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport \"./Form.css\";\r\nimport Geocode from \"react-geocode\";\r\nconst Form = (props) => {\r\n  const [address, setAddress] = useState();\r\n\r\n  let value = null;\r\n  let finalVal = null;\r\n  if (props.ulng !== 0 && props.ulat !== 0) {\r\n    value = `${props.ulat},${props.ulng}`;\r\n    finalVal = {\r\n      lat: props.ulat,\r\n      lng: props.ulng,\r\n    };\r\n  } else if (props.alng !== 0 && props.alat !== 0) {\r\n    value = `${props.alat},${props.alng}`;\r\n    finalVal = {\r\n      lat: props.alat,\r\n      lng: props.alng,\r\n    };\r\n  }\r\n  Geocode.setApiKey(\"AIzaSyBPGwrQYKuxPI6oRmVeifTkbT_X0Wurxr4\");\r\n  const [pictures, setPictures] = useState([]);\r\n  // from here read cookie name\r\n  const onDrop = (picture) => {\r\n    setPictures([...pictures, picture]);\r\n  };\r\n  Geocode.fromLatLng(`${finalVal.lat}`, `${finalVal.lng}`).then(\r\n    (response) => {\r\n      const address = response.results[0].formatted_address;\r\n      setAddress(address);\r\n    },\r\n    (error) => {\r\n      console.error(error);\r\n    }\r\n  );\r\n  return (\r\n    <div>\r\n      <form\r\n        autocomplete=\"off\"\r\n        method=\"POST\"\r\n        enctype=\"multipart/form-data\"\r\n        action=\"https://www.ecocam.w3lab.cloud/map/\"\r\n      >\r\n        <ImageUploader\r\n          buttonText={props.chooseImg}\r\n          onChange={onDrop}\r\n          imgExtension={[\".jpg\", \".png\"]}\r\n          label={props.galLab}\r\n          withPreview={true}\r\n          withLabel={false}\r\n          withIcon={false}\r\n          name=\"gallery[]\"\r\n        />\r\n        <div className=\"input-down\">\r\n          <textarea placeholder={props.desc} name=\"description\"></textarea>\r\n          <input\r\n            type=\"text\"\r\n            className=\"hidden\"\r\n            name=\"longlang\"\r\n            value={value}\r\n          ></input>\r\n          <input\r\n            type=\"text\"\r\n            className=\"hidden\"\r\n            name=\"namestreet\"\r\n            value={address}\r\n          ></input>\r\n          <input type=\"text\" className=\"hidden\" name=\"name\"></input>\r\n          <button type=\"submit\">{props.submit}</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState, useEffect } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\nimport mapStyles from \"./mapStyles\";\nimport Modal from \"react-modal\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Spinner from \"./components/Spinner\";\nimport Form from \"./components/Form\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from \"react-responsive-carousel\";\n\nfunction Map() {\n  // from here read cookie token\n  const [showForm, setShowForm] = useState(false);\n  const [locSpinner, setLocSpinner] = useState(false);\n  const [caseList, setCaseList] = useState(null);\n  const [singleCase, setSingleCase] = useState(null);\n  const [payload, setPayload] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [popup, setShowPopup] = useState(false);\n  const [spinner, setSpinner] = useState(true);\n  const [reportCase, setReportCase] = useState(false);\n  const [galleryLogic, setGalleryLogic] = useState(false);\n  const [lngData, setLngData] = useState();\n  const [token, setToken] = useState(\"\");\n  // auth\n  const [userChoose, setUserChoose] = useState(false);\n\n  const [userChooseMap, setUserCooseMap] = useState({\n    lat: 0,\n    lng: 0,\n  });\n\n  const [startLocation, setStartLocation] = useState({\n    lat: 42.891296,\n    lng: 20.866036,\n  });\n  const [currentLoc, setCurrentLoc] = useState({\n    lat: 0,\n    lng: 0,\n  });\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      width: \"80vw\",\n      height: \"80vh\",\n      margin: \"auto\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n\n  const customStylesMapChoose = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      width: \"80vw\",\n      height: \"auto !important\",\n      margin: \"auto\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"https://www.ecocam.w3lab.cloud/wp-json/wp/v2/case\")\n      .then((res) => {\n        setCaseList(res.data);\n        setLoaded(!loaded);\n      });\n    function readCookie(name) {\n      var nameEQ = name + \"=\";\n      var ca = document.cookie.split(\";\");\n      for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) === \" \") c = c.substring(1, c.length);\n        if (c.indexOf(nameEQ) === 0)\n          return c.substring(nameEQ.length, c.length);\n      }\n      return null;\n    }\n    let cookieName = readCookie(\"auth\");\n    let currentLang = readCookie(\"wp-wpml_current_language\");\n    setLngData({\n      address: \"Adresa\",\n      repofuser: \"Prijavljeno od\",\n      status: \"Status\",\n      descr: \"Opis\",\n      readMore: \"Pročitaj opširnije\",\n      modalH1: \"Drago nam je što vodiš računa o svojoj okolini.\",\n      modalP: \"Odobri svoju lokaciju ili odaberi lokaciju na mapi.\",\n      btnAutoLoc: \"Trenutna lokacija\",\n      btnMap: \"Biram na mapi\",\n      repCase: \"Prijavi slučaj\",\n      success: \"Odlično! Imamo lokaciju, popuni ostala polja!\",\n      galLab: \"Maksimalna veličina fotografije je 5mb\",\n      desc: \"Opis\",\n      submit: \"Prijavi slučaj\",\n      chooseImg: \"Odaberi fotografije\",\n    });\n    if (currentLang === \"sr\") {\n      setLngData({\n        address: \"Adresa\",\n        repofuser: \"Prijavljeno od\",\n        status: \"Status\",\n        descr: \"Opis\",\n        readMore: \"Pročitaj opširnije\",\n        modalH1: \"Drago nam je što vodiš računa o svojoj okolini.\",\n        modalP: \"Odobri svoju lokaciju ili odaberi lokaciju na mapi.\",\n        btnAutoLoc: \"Trenutna lokacija\",\n        btnMap: \"Biram na mapi\",\n        repCase: \"Prijavi slučaj\",\n        success: \"Odlično! Imamo lokaciju, popuni ostala polja!\",\n        galLab: \"Maksimalna veličina fotografije je 5mb\",\n        desc: \"Opis\",\n        submit: \"Prijavi slučaj\",\n        chooseImg: \"Odaberi fotografije\",\n      });\n      if (currentLang === \"al\") {\n        setLngData({\n          address: \"Adresa\",\n          repofuser: \"Prijavljeno od\",\n          status: \"Status\",\n          descr: \"Opis\",\n          readMore: \"Pročitaj opširnije\",\n          modalH1: \"Drago nam je što vodiš računa o svojoj okolini.\",\n          modalP: \"Odobri svoju lokaciju ili odaberi lokaciju na mapi.\",\n          btnAutoLoc: \"Trenutna lokacija\",\n          btnMap: \"Biram na mapi\",\n          repCase: \"Prijavi slučaj\",\n          success: \"Odlično! Imamo lokaciju, popuni ostala polja!\",\n          galLab: \"Maksimalna veličina fotografije je 5mb\",\n          desc: \"Opis\",\n          submit: \"Prijavi slučaj\",\n          chooseImg: \"Odaberi fotografije\",\n        });\n      } else {\n        setLngData({\n          address: \"Adresa\",\n          repofuser: \"Prijavljeno od\",\n          status: \"Status\",\n          descr: \"Opis\",\n          readMore: \"Pročitaj opširnije\",\n          modalH1: \"Drago nam je što vodiš računa o svojoj okolini.\",\n          modalP: \"Odobri svoju lokaciju ili odaberi lokaciju na mapi.\",\n          btnAutoLoc: \"Trenutna lokacija\",\n          btnMap: \"Biram na mapi\",\n          repCase: \"Prijavi slučaj\",\n          success: \"Odlično! Imamo lokaciju, popuni ostala polja!\",\n          galLab: \"Maksimalna veličina fotografije je 5mb\",\n          desc: \"Opis\",\n          submit: \"Prijavi slučaj\",\n          chooseImg: \"Odaberi fotografije\",\n        });\n      }\n    }\n    if (cookieName) {\n      setToken(\"1\");\n    }\n  }, []);\n  const showPopupModal = (id) => {\n    setShowPopup(true);\n    axios\n      .get(`https://www.ecocam.w3lab.cloud/wp-json/wp/v2/case/${id}`)\n      .then((res) => {\n        setSingleCase(res.data);\n        setSpinner(!spinner);\n      })\n      .then(() => setGalleryLogic(true));\n  };\n  const getUserLocaltion = () => {\n    setLocSpinner(!locSpinner);\n    const showPosition = (position) => {\n      setCurrentLoc({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n      });\n      setLocSpinner(false);\n      setReportCase(!reportCase);\n      setShowForm(!showForm);\n      setUserCooseMap({\n        lat: 0,\n        lng: 0,\n      });\n    };\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition, () => {\n        setLocSpinner(false);\n        setReportCase(!reportCase);\n      });\n    }\n  };\n\n  const getUserChoose = () => {\n    setReportCase(!reportCase);\n    setUserChoose(true);\n  };\n  return (\n    loaded && (\n      <GoogleMap\n        defaultZoom={15}\n        defaultCenter={{\n          lat: startLocation.lat,\n          lng: startLocation.lng,\n        }}\n        defaultOptions={{ styles: mapStyles }}\n        onClick={(e) => {\n          if (userChoose) {\n            setUserCooseMap(e.latLng.toJSON());\n            setUserChoose(false);\n            setShowForm(!showForm);\n            setCurrentLoc({\n              lat: 0,\n              lng: 0,\n            });\n          }\n        }}\n      >\n        <Modal isOpen={popup} style={customStyles}>\n          <div className=\"modal-wrapper\">\n            <div\n              className=\"close-container\"\n              onClick={() => {\n                setShowPopup(false);\n                setSpinner(!spinner);\n              }}\n            >\n              <div className=\"leftright\"></div>\n              <div className=\"rightleft\"></div>\n            </div>\n            <div className=\"row-slider\">\n              {galleryLogic && (\n                <Carousel>\n                  {singleCase.acf.gallery.map((img) => {\n                    return (\n                      <div\n                        style={{\n                          backgroundImage: `url(${img.image})`,\n                          backgroundPosition: \"center\",\n                          backgroundRepeat: \"no-repeat\",\n                          backgroundSize: \"contain\",\n                        }}\n                      ></div>\n                    );\n                  })}\n                </Carousel>\n              )}\n              {galleryLogic && (\n                <div style={{ height: \"50%\", overflow: \"hidden\" }}>\n                  <h1\n                    style={{\n                      textAlign: \"center\",\n                      color: \"#43a047\",\n                      marginTop: \"40px\",\n                    }}\n                  >\n                    {singleCase.title.rendered}\n                  </h1>\n\n                  <div className=\"carousel-box container\">\n                    <div>\n                      <h3>\n                        <span>{lngData.address}: </span>\n                        {singleCase.acf.address}\n                      </h3>\n                      <h3>\n                        <span>{lngData.repofuser}: </span>\n                        {singleCase.acf.name}\n                      </h3>\n                      <h3>\n                        <span>{lngData.status}: </span>\n                        {singleCase.acf.status}\n                      </h3>\n                    </div>\n                    <div>\n                      <h3>\n                        <span>{lngData.desc}: </span>\n                        {singleCase.acf.description}\n                      </h3>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {spinner && <Spinner />}\n          </div>\n        </Modal>\n        <Modal isOpen={reportCase} style={customStylesMapChoose}>\n          <div className=\"modal-wrapper\">\n            <div\n              className=\"close-container\"\n              onClick={() => {\n                setReportCase(!reportCase);\n              }}\n            >\n              <div className=\"leftright\"></div>\n              <div className=\"rightleft\"></div>\n            </div>\n            <div className=\"modal-info\">\n              <div>\n                <h1>{lngData.modalH1}</h1>\n                <p>{lngData.modalP}</p>\n              </div>\n\n              <div className=\"button-group\">\n                <button className=\"rep-button\" onClick={getUserLocaltion}>\n                  {lngData.btnAutoLoc}\n                </button>\n                <button className=\"rep-button\" onClick={getUserChoose}>\n                  {lngData.btnMap}\n                </button>\n              </div>\n            </div>\n\n            {locSpinner && <Spinner status={\"popup-allowed\"} />}\n          </div>\n        </Modal>\n        {caseList.map((c) => {\n          let first = parseFloat(c.acf.latitude);\n          let sec = parseFloat(c.acf.longitude);\n\n          if (c.acf.latitude) {\n            let res = null;\n            if (c.acf.status === \"In Progress\") {\n              res = `leafinprogress`;\n            } else if (c.acf.status === \"New Case\") {\n              res = `leafnewcase`;\n            } else if (c.acf.status === \"Success\") {\n              res = `leafsuccess`;\n            }\n            return (\n              <Marker\n                key={c.id}\n                position={{\n                  lat: sec,\n                  lng: first,\n                }}\n                icon={{\n                  url: `https://www.ecocam.w3lab.cloud/wp-content/uploads/2020/05/${res}.svg`,\n                  scaledSize: new window.google.maps.Size(35, 35),\n                }}\n                onClick={() => showPopupModal(c.id)}\n              />\n            );\n          }\n        })}\n        <button\n          disabled={!token}\n          className=\"myButton\"\n          onClick={() => {\n            setReportCase(!reportCase);\n          }}\n        >\n          {lngData.repCase}\n        </button>\n        {userChooseMap && (\n          <Marker\n            key={0}\n            position={{\n              lat: userChooseMap.lat,\n              lng: userChooseMap.lng,\n            }}\n            icon={{\n              url: `https://www.ecocam.w3lab.cloud/wp-content/uploads/2020/05/leafnewcase.svg`,\n              scaledSize: new window.google.maps.Size(35, 35),\n            }}\n          />\n        )}\n        {showForm && (\n          <div\n            className={`form-down slide-in-bottom container ${\n              !showForm ? \"slide-in-down\" : \"\"\n            }`}\n          >\n            <div\n              className=\"close-container\"\n              onClick={() => {\n                setShowForm(false);\n              }}\n            >\n              <div className=\"leftright\"></div>\n              <div className=\"rightleft\"></div>\n            </div>\n            <div className=\"form-col\">\n              <h2>{lngData.success}</h2>\n\n              <Form\n                payload={payload}\n                ulng={userChooseMap.lng}\n                ulat={userChooseMap.lat}\n                alng={currentLoc.lng}\n                alat={currentLoc.lat}\n                chooseImg={lngData.chooseImg}\n                galLab={lngData.galLab}\n                desc={lngData.desc}\n                address={lngData.address}\n                submit={lngData.submit}\n              />\n            </div>\n          </div>\n        )}\n      </GoogleMap>\n    )\n  );\n}\n\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\n\nexport default function App() {\n  return (\n    <div style={{ width: \"100vw\", height: \"80vh\", overflow: \"hidden\" }}>\n      <MapWrapped\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyBPGwrQYKuxPI6oRmVeifTkbT_X0Wurxr4`}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `100%` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n      />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}